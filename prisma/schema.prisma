// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  fullName  String
  email     String   @unique
  address   String
  createdAt DateTime @default(now())
  orders    Order[]
  cart      Cart?
  reviews   Review[]
}

model Admin {
  id        Int       @id @default(autoincrement())
  fullName  String
  email     String    @unique
  address   String
  createdAt DateTime  @default(now())
  products  Product[]
}

model Order {
  orderId     Int         @id @default(autoincrement())
  totalAmount Float
  userId      Int
  status      OrderStatus
  paymentId   String
  orderDate   DateTime    @default(now())
  customer    Customer    @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
}

model OrderItem {
  orderId   Int
  productId Int
  quantity  Int
  size      Size
  order     Order   @relation(fields: [orderId], references: [orderId])
  product   Product @relation(fields: [productId], references: [productId])

  @@id([orderId, productId, size])
}

model Cart {
  cartId      Int        @id @default(autoincrement())
  totalAmount Float
  userId      Int        @unique
  customer    Customer   @relation(fields: [userId], references: [id])
  cartItems   CartItem[]
}

model CartItem {
  cartId    Int
  productId Int
  quantity  Int
  size      Size
  cart      Cart    @relation(fields: [cartId], references: [cartId])
  product   Product @relation(fields: [productId], references: [productId])

  @@id([cartId, productId, size])
}

model Product {
  productId    Int           @id @default(autoincrement())
  name         String
  price        Float
  description  String
  imagePath    String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  adminId      Int
  admin        Admin         @relation(fields: [adminId], references: [id])
  productSizes ProductSize[]
  orderItems   OrderItem[]
  cartItems    CartItem[]
  reviews      Review[]
}

model ProductSize {
  id            Int     @id @default(autoincrement())
  size          Size
  stockQuantity Int
  productId     Int
  product       Product @relation(fields: [productId], references: [productId])

  @@unique([productId, size])
}

model Review {
  custId    Int
  productId Int
  comment   String
  customer  Customer @relation(fields: [custId], references: [id])
  product   Product  @relation(fields: [productId], references: [productId])

  @@id([custId, productId])
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}
